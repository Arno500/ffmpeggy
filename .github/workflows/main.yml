name: main

on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"

jobs:
  build:
    name: Build and test
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [16.x, 18.x, 19.x]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: volta-cli/action@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-yarn-
      - name: Install dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: Run tests
        run: yarn test:debug
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            es
            cjs

  coverage:
    name: Test coverage
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: volta-cli/action@v3
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node modules
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-16.x-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-16.x-yarn-
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
      - name: Install dependencies
        run: yarn install
      - name: Run tests
        run: yarn test --coverage
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: volta-cli/action@v3
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node modules
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-16.x-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-16.x-yarn-
      - name: Install dependencies
        run: yarn install
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn semantic-release
